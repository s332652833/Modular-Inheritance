package modularinheritance;
/**
 *
 * @author S332652833
 */
import java.util.Scanner;

public class ModularInheritance {
    /**
     * @param args the command line arguments
     */
    public static double x = 0;
        
    static void quit(String word) {
        
        if (word.equalsIgnoreCase("quit")){
           System.exit(0);
        }
    }
    
    static void check(double num) {
        double t = 1;
        Scanner sc = new Scanner(System.in);
        while (t==1){
            String input = sc.nextLine();
            quit(input);
            try {
               num = Double.parseDouble(input);
               if (num > 0) {
                  t = 0;
               } else {
               throw new NumberFormatException();
               }
                
            }
                catch (NumberFormatException e) {
                System.out.println("That's not a valid input. Must be a number above 0 ");
                continue;
                }
        } 
        x = num;
    }

    public static void main(String[] args) {
        double a = 0;
        double base = 0;
        double c = 0;
        double height= 0;
        double rad = 0;

    
        Scanner sc = new Scanner(System.in);
        System.out.println("This program will find the area or perimeter of a shape, type 'quit' at any time to exit program");
        System.out.println("What shape would you like to find? Circle, Triangle, Rectangle, Square, Parallelogram, Pentagon, or Hexagon? ");
        String input = sc.nextLine();   
        quit(input);
        
        if(input.equalsIgnoreCase("triangle")){
            System.out.println("What is the length of the base(bottom side)?");
            check(base);
            base = x;
            
            System.out.println("What is the length of the second side?");
            check(a);
            a = x;
            
            System.out.println("What is the length of the third side?");
            check(c);
            c = x;
            
            System.out.println("What is the height?");
            check(height);
            height = x;
            
            Triangle tri = new Triangle(base, height);
            tri.printArea();      
            tri.PerimeterCalc(a, base, c);

        }
        }
    }
